////<auto-generated <- Codemaid exclusion for now (PacketIndex Order is important for maintenance)

using OpenNos.Core;
using OpenNos.Core.Serializing;
using OpenNos.Domain;
using OpenNos.GameObject;
using OpenNos.Master.Library.Client;
using System;

namespace OpenNos.Handler.CommandPackets
{
    [PacketHeader("$LeaveAct4", PassNonParseablePacket = true, Authority = AuthorityType.GM)]
    public class LeaveAct4Packet
    {
        #region Methods

        public static void HandlePacket(object session, string packet)
        {
            if (session is ClientSession sess)
            {
                LeaveAct4Packet packetDefinition = new LeaveAct4Packet();
                packetDefinition.ExecuteHandler(sess);
            }
        }

        public static void Register() => PacketFacility.AddHandler(typeof(LeaveAct4Packet), HandlePacket, ReturnHelp);

        public static string ReturnHelp() => "$LeaveAct4";

        private void ExecuteHandler(ClientSession session)
        {
            Logger.LogUserEvent("GMCOMMAND", session.GenerateIdentity(), $"[LeaveAct4]");
            if (session.Character.Channel.ChannelId == 51)
            {
                string connection = CommunicationServiceClient.Instance.RetrieveOriginWorld(session.Character.AccountId);
                if (string.IsNullOrWhiteSpace(connection))
                {
                    return;
                }
                session.Character.MapId = 129;
                session.Character.MapX = 77;
                session.Character.MapY = 141;
                int port = Convert.ToInt32(connection.Split(':')[1]);
                session.Character.ChangeChannel(connection.Split(':')[0], port, 3);
            }
        }

        #endregion
    }
}