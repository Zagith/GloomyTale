////<auto-generated <- Codemaid exclusion for now (PacketIndex Order is important for maintenance)

using OpenNos.Core;
using OpenNos.DAL;
using OpenNos.Domain;
using OpenNos.GameObject;

namespace OpenNos.Handler.CommandPackets
{
    [PacketHeader("$RemovePortal" , PassNonParseablePacket = true, Authority = AuthorityType.GA)]
    public class RemovePortalPacket
    {
        #region Methods

        public static void HandlePacket(object session, string packet)
        {
            RemovePortalPacket packetDefinition = new RemovePortalPacket();
            packetDefinition.ExecuteHandler(session as ClientSession);
        }

        public static void Register() => PacketFacility.AddHandler(typeof(RemovePortalPacket), HandlePacket, ReturnHelp);

        public static string ReturnHelp() => "$RemovePortal";

        private void ExecuteHandler(ClientSession session)
        {
            if (session.HasCurrentMapInstance)
            {
                Portal portal = session.CurrentMapInstance.Portals.Find(s =>
                    s.SourceMapInstanceId == session.Character.MapInstanceId && Map.GetDistance(
                        new MapCell { X = s.SourceX, Y = s.SourceY },
                        new MapCell { X = session.Character.PositionX, Y = session.Character.PositionY }) < 10);
                if (portal != null)
                {
                    Logger.LogUserEvent("GMCOMMAND", session.GenerateIdentity(),
                        $"[RemovePortal]MapId: {portal.SourceMapId} MapX: {portal.SourceX} MapY: {portal.SourceY}");
                    session.SendPacket(session.Character.GenerateSay(
                        string.Format(Language.Instance.GetMessageFromKey("NEAREST_PORTAL"), portal.SourceMapId,
                            portal.SourceX, portal.SourceY), 12));
                    if (DAOFactory.PortalDAO.LoadById(portal.PortalId) != null)
                    {
                        DAOFactory.PortalDAO.DeleteById(portal.PortalId);
                    }
                    session.CurrentMapInstance.Portals.Remove(portal);
                    portal.SourceX = -1;
                    portal.SourceY = -1;
                    portal.IsDisabled = true;
                    session.CurrentMapInstance.Broadcast(portal.GenerateGp());
                }
                else
                {
                    session.SendPacket(
                        session.Character.GenerateSay(Language.Instance.GetMessageFromKey("NO_PORTAL_FOUND"), 11));
                }
            }
        }

        #endregion
    }
}