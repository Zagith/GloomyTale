////<auto-generated <- Codemaid exclusion for now (PacketIndex Order is important for maintenance)

using OpenNos.Core;
using OpenNos.Core.Serializing;
using OpenNos.DAL;
using OpenNos.Data;
using OpenNos.Data.I18N;
using OpenNos.Domain;
using OpenNos.GameObject;
using OpenNos.GameObject.Networking;
using System.Linq;

namespace OpenNos.Handler.CommandPackets
{
    [PacketHeader("$SearchItem", "$SItem", PassNonParseablePacket = true, Authority = AuthorityType.GM)]
    public class SearchItemPacket
    {
        #region Members

        private bool _isParsed;

        #endregion

        #region Properties

        public string Name { get; set; }

        public byte Page { get; set; }

        #endregion

        #region Methods

        public static void HandlePacket(object session, string packet)
        {
            if (session is ClientSession sess)
            {
                string[] packetSplit = packet.Split(new[] { ' ' }, 3);
                if (packetSplit.Length < 3)
                {
                    sess.SendPacket(sess.Character.GenerateSay(ReturnHelp(), 10));
                    return;
                }
                SearchItemPacket packetDefinition = new SearchItemPacket();
                if (!string.IsNullOrWhiteSpace(packetSplit[2]))
                {
                    packetDefinition._isParsed = true;
                    string[] searchSplit = packetSplit[2].Split(' ');
                    packetDefinition.Page =
                        byte.TryParse(searchSplit[searchSplit.Length - 1], out byte pg) ? pg : (byte)0;
                    packetDefinition.Name = searchSplit[searchSplit.Length - 1] != packetDefinition.Page.ToString()
                        ? packetSplit[2]
                        : string.Join(" ", searchSplit.Take(searchSplit.Length - 1));
                }
                packetDefinition.ExecuteHandler(sess);
            }
        }

        public static void Register() => PacketFacility.AddHandler(typeof(SearchItemPacket), HandlePacket, ReturnHelp);

        public static string ReturnHelp() => "$SearchItem NAME PAGE(?)";

        private void ExecuteHandler(ClientSession session)
        {
            if (_isParsed)
            {
                Logger.LogUserEvent("GMCOMMAND", session.GenerateIdentity(),
                    $"[SearchItem]Name: {Name} Page: {Page}");

                foreach (I18NItemDto i18nItemName in DAOFactory.I18NItemDAO.FindByName(Name, session.Account.Language).OrderBy(s => s.Key).Skip(Page * 200).Take(200).ToList())
                {
                    ItemDTO item = DAOFactory.ItemDAO.LoadByKey(i18nItemName.Key);
                    if (item != null)
                    {
                        Item vnum = ServerManager.GetItem(item.VNum);
                        if (vnum != null)
                        {
                            session.SendPacket(session.Character.GenerateSay(
                                    $"[SearchItem:{Page}]Item: {(string.IsNullOrEmpty(vnum.Name[session.Account.Language]) ? "none" : vnum.Name[session.Account.Language])} VNum: {vnum.VNum}",
                                    12));
                        }
                        else
                        {
                            session.SendPacket(
                                session.Character.GenerateSay(Language.Instance.GetMessageFromKey("ITEM_NOT_FOUND"), 11));
                        }
                    }
                }
            }
            else
            {
                session.SendPacket(session.Character.GenerateSay(ReturnHelp(), 10));
            }
        }

        #endregion
    }
}