////<auto-generated <- Codemaid exclusion for now (PacketIndex Order is important for maintenance)

using OpenNos.Core;
using OpenNos.Core.Serializing;
using OpenNos.Domain;
using OpenNos.GameObject;
using OpenNos.GameObject.Helpers;
using OpenNos.GameObject.Networking;
using System;
using System.Reflection;

namespace OpenNos.Handler.CommandPackets.Character
{
    [PacketHeader("$CharEdit", PassNonParseablePacket = true, Authority = AuthorityType.GA)]
    public class CharacterEditPacket
    {
        #region Members

        private bool _isParsed;

        #endregion

        #region Properties

        public string Data { get; set; }

        public string Property { get; set; }

        #endregion

        #region Methods

        public static void HandlePacket(object session, string packet)
        {
            string[] packetSplit = packet.Split(new[] { ' ' }, 4);
            if (!(session is ClientSession sess))
            {
                return;
            }
            if (packetSplit.Length < 4)
            {
                sess.SendPacket(sess.Character.GenerateSay(ReturnHelp(), 10));
                return;
            }
            CharacterEditPacket packetDefinition = new CharacterEditPacket();
            if (!string.IsNullOrEmpty(packetSplit[2]) && !string.IsNullOrEmpty(packetSplit[3]))
            {
                packetDefinition._isParsed = true;
                packetDefinition.Property = packetSplit[2];
                packetDefinition.Data = packetSplit[3];
            }
            packetDefinition.ExecuteHandler(sess);
            LogHelper.Instance.InsertCommandLog(sess.Character.CharacterId, packet, sess.IpAddress);
        }

        public static void Register() => PacketFacility.AddHandler(typeof(CharacterEditPacket), HandlePacket, ReturnHelp);

        public static string ReturnHelp() => "$CharEdit PROPERTYNAME DATA";

        private void ExecuteHandler(ClientSession session)
        {
            if (_isParsed)
            {
                Logger.LogUserEvent("GMCOMMAND", session.GenerateIdentity(),
                    $"[CharEdit]Property: {Property} Value: {Data}");
                PropertyInfo propertyInfo = session.Character.GetType().GetProperty(Property);
                if (propertyInfo != null)
                {
                    propertyInfo.SetValue(session.Character,
                        Convert.ChangeType(Data, propertyInfo.PropertyType));
                    ServerManager.Instance.ChangeMap(session.Character.CharacterId);
                    session.Character.Save();
                    session.SendPacket(session.Character.GenerateSay(Language.Instance.GetMessageFromKey("DONE"),
                        10));
                }
            }
            else
            {
                session.SendPacket(session.Character.GenerateSay(ReturnHelp(), 10));
            }
        }

        #endregion
    }
}