////<auto-generated <- Codemaid exclusion for now (PacketIndex Order is important for maintenance)

using OpenNos.Core;
using OpenNos.Core.Serializing;
using OpenNos.Domain;
using OpenNos.GameObject;
using OpenNos.GameObject.Networking;

namespace OpenNos.Handler.CommandPackets
{
    [PacketHeader("$Miniland", PassNonParseablePacket = true, Authority = AuthorityType.GM)]
    public class MinilandPacket
    {
        #region Properties

        private bool _isParsed;

        public string CharacterName { get; set; }

        #endregion

        #region Methods

        public static void HandlePacket(object session, string packet)
        {
            if (session is ClientSession sess)
            {
                string[] packetSplit = packet.Split(' ');
                if (packetSplit.Length < 3)
                {
                    sess.SendPacket(sess.Character.GenerateSay(ReturnHelp(), 10));
                    return;
                }
                MinilandPacket packetDefinition = new MinilandPacket();
                if (!string.IsNullOrEmpty(packetSplit[2]))
                {
                    packetDefinition._isParsed = true;
                    packetDefinition.CharacterName = packetSplit[2];
                }
                packetDefinition.ExecuteHandler(sess);
            }
        }

        public static void Register() => PacketFacility.AddHandler(typeof(MinilandPacket), HandlePacket);

        public static string ReturnHelp() => "$Miniland CharacterName";

        private void ExecuteHandler(ClientSession session)
        {
            if (_isParsed)
            {
                if (string.IsNullOrEmpty(CharacterName))
                {
                    Logger.LogUserEvent("GMCOMMAND", session.GenerateIdentity(), $"[Miniland]");

                    ServerManager.Instance.JoinMiniland(session, session);
                }
                else
                {
                    ClientSession Session = ServerManager.Instance.GetSessionByCharacterName(CharacterName);
                    if (session != null)
                    {
                        Logger.LogUserEvent("GMCOMMAND", session.GenerateIdentity(), $"[Miniland]CharacterName: {CharacterName}");

                        ServerManager.Instance.JoinMiniland(session, session);

                    }
                }
            }
            else
            {
                session.SendPacket(session.Character.GenerateSay(ReturnHelp(), 10));
            }
        }
        #endregion
    }
}